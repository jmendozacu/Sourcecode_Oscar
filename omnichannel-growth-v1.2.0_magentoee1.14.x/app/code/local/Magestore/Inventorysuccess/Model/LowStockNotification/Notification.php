<?php
/**
 * Magestore
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magestore.com license that is
 * available through the world-wide-web at this URL:
 * http://www.magestore.com/license-agreement.html
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category    Magestore
 * @package     Magestore_Inventorysuccess
 * @copyright   Copyright (c) 2016 Magestore (http://www.magestore.com/)
 * @license     http://www.magestore.com/license-agreement.html
 */

/**
 * Adjuststock Model
 * 
 * @category    Magestore
 * @package     Magestore_Inventorysuccess
 * @author      Magestore Developer
 */
class Magestore_Inventorysuccess_Model_LowStockNotification_Notification extends Mage_Core_Model_Abstract
{
    /**#@+
     * Notification's fields
     */
    const NOTIFICATION_ID = 'notification_id';
    const RULE_ID = 'rule_id';
    const CREATED_AT = 'created_at';
    const UPDATE_TYPE = 'update_type';
    const NOTIFIER_EMAILS = 'notifier_emails';
    const LOWSTOCK_THRESHOLD_TYPE = 'lowstock_threshold_type';
    const LOWSTOCK_THRESHOLD_QTY = 'lowstock_threshold_qty';
    const LOWSTOCK_THRESHOLD = 'lowstock_threshold';
    const SALES_PERIOD = 'sales_period';
    const WAREHOUSE_ID = 'warehouse_id';
    const WAREHOUSE_NAME = 'warehouse_name';
    const WARNING_MESSAGE = 'warning_message';

    /**
     * Notification's update type
     */
    const TYPE_SYSTEM = 1;
    const TYPE_WAREHOUSE = 2;

    /**
     * notification type
     */
    const NOTIFY_TYPE_SYSTEM = 1;
    const NOTIFY_TYPE_WAREHOUSE = 2;

    public function _construct()
    {
        parent::_construct();
        $this->_init('inventorysuccess/lowStockNotification_notification');
    }

    /**
     * @return mixed
     */
    public function getId()
    {
        return parent::getId(); // TODO: Change the autogenerated stub
    }

    /**
     * @param mixed $id
     * @return Mage_Core_Model_Abstract
     */
    public function setId($id)
    {
        return parent::setId($id); // TODO: Change the autogenerated stub
    }

    /**
     * Get rule id
     *
     * @return int
     */
    public function getRuleId()
    {
        return $this->_getData(self::RULE_ID);
    }

    /**
     * Set rule id
     *
     * @param int $ruleId
     * @return $this
     */
    public function setRuleId($ruleId)
    {
        return $this->setData(self::RULE_ID, $ruleId);
    }

    /**
     * Get created at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->_getData(self::CREATED_AT);
    }

    /**
     * Set created at
     *
     * @param string $createdAt
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        return $this->setData(self::CREATED_AT, $createdAt);
    }

    /**
     * Get update type
     *
     * @return int
     */
    public function getUpdateType()
    {
        return $this->_getData(self::UPDATE_TYPE);
    }

    /**
     * Set update type
     *
     * @param int $updateType
     * @return $this
     */
    public function setUpdateType($updateType)
    {
        return $this->setData(self::UPDATE_TYPE, $updateType);
    }

    /**
     * Get Notification recipients
     *
     * @return string
     */
    public function getNotifierEmails()
    {
        return $this->_getData(self::NOTIFIER_EMAILS);
    }

    /**
     * Set Notification recipients
     *
     * @param string $notifierEmails
     * @return $this
     */
    public function setNotifierEmails($notifierEmails)
    {
        return $this->setData(self::NOTIFIER_EMAILS, $notifierEmails);
    }

    /**
     * Get lowstock threshold type
     *
     * @return int
     */
    public function getLowstockThresholdType()
    {
        return $this->_getData(self::LOWSTOCK_THRESHOLD_TYPE);
    }

    /**
     * Set lowstock threshold type
     *
     * @param int $lowstockThresholdType
     * @return $this
     */
    public function setLowstockThresholdType($lowstockThresholdType)
    {
        return $this->setData(self::LOWSTOCK_THRESHOLD_TYPE, $lowstockThresholdType);
    }

    /**
     * Get lowstock threshold qty
     *
     * @return int
     */
    public function getLowstockThresholdQty()
    {
        return $this->_getData(self::LOWSTOCK_THRESHOLD_QTY);
    }

    /**
     * Set lowstock threshold qty
     *
     * @param int $lowstockThresholdQty
     * @return $this
     */
    public function setLowstockThresholdQty($lowstockThresholdQty)
    {
        return $this->setData(self::LOWSTOCK_THRESHOLD_QTY, $lowstockThresholdQty);
    }

    /**
     * Get lowstock threshold
     *
     * @return int
     */
    public function getLowstockThreshold()
    {
        return $this->_getData(self::LOWSTOCK_THRESHOLD);
    }

    /**
     * Set lowstock threshold
     *
     * @param int $lowstockThreshold
     * @return $this
     */
    public function setLowstockThreshold($lowstockThreshold)
    {
        return $this->setData(self::LOWSTOCK_THRESHOLD, $lowstockThreshold);
    }

    /**
     * Get sales period
     *
     * @return int
     */
    public function getSalesPeriod()
    {
        return $this->_getData(self::SALES_PERIOD);
    }

    /**
     * Set sales period
     *
     * @param int $salesPeriod
     * @return $this
     */
    public function setSalesPeriod($salesPeriod)
    {
        return $this->setData(self::SALES_PERIOD, $salesPeriod);
    }

    /**
     * Get warehouse id
     *
     * @return int
     */
    public function getWarehouseId()
    {
        return $this->_getData(self::WAREHOUSE_ID);
    }

    /**
     * Set warehouse id
     *
     * @param int $warehouseId
     * @return $this
     */
    public function setWarehouseId($warehouseId)
    {
        return $this->setData(self::WAREHOUSE_ID, $warehouseId);
    }

    /**
     * Get warehouse name
     *
     * @return string
     */
    public function getWarehouseName()
    {
        return $this->_getData(self::WAREHOUSE_NAME);
    }

    /**
     * Set warehouse name
     *
     * @param string $warehouseName
     * @return $this
     */
    public function setWarehouseName($warehouseName)
    {
        return $this->setData(self::WAREHOUSE_NAME, $warehouseName);
    }

    /**
     * Get warning message
     *
     * @return string
     */
    public function getWarningMessage()
    {
        return $this->_getData(self::WARNING_MESSAGE);
    }

    /**
     * Set warning message
     *
     * @param string $warningMessage
     * @return $this
     */
    public function setWarningMessage($warningMessage)
    {
        return $this->setData(self::WARNING_MESSAGE, $warningMessage);
    }

    /**
     * Prepare notification's update type.
     *
     * @return array
     */
    public function getAvailableUpdateType()
    {
        return array(
            self::TYPE_SYSTEM => Mage::helper('inventorysuccess')->__('System'),
            self::TYPE_WAREHOUSE => Mage::helper('inventorysuccess')->__('Warehouse')
        );
    }
}