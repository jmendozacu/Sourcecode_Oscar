<?php
/**
 * Magestore
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magestore.com license that is
 * available through the world-wide-web at this URL:
 * http://www.magestore.com/license-agreement.html
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category    Magestore
 * @package     Magestore_Inventorysuccess
 * @copyright   Copyright (c) 2016 Magestore (http://www.magestore.com/)
 * @license     http://www.magestore.com/license-agreement.html
 */

/**
 * Adjuststock Model
 * 
 * @category    Magestore
 * @package     Magestore_Inventorysuccess
 * @author      Magestore Developer
 */
class Magestore_Inventorysuccess_Model_LowStockNotification_Notification_Product extends Mage_Core_Model_Abstract
{
    /**#@+
     * Rule product's fields
     */
    const NOTIFICATION_PRODUCT_ID = 'notification_product_id';
    const NOTIFICATION_ID = 'notification_id';
    const PRODUCT_ID = 'product_id';
    const PRODUCT_SKU = 'product_sku';
    const PRODUCT_NAME = 'product_name';
    const CURRENT_QTY = 'current_qty';
    const SOLD_PER_DAY = 'sold_per_day';
    const TOTAL_SOLD = 'total_sold';
    const AVAILABILITY_DAYS = 'availability_days';
    const AVAILABILITY_DATE = 'availability_date';

    public function _construct()
    {
        parent::_construct();
        $this->_init('inventorysuccess/lowStockNotification_notification_product');
    }

    /**
     * @return mixed
     */
    public function getId()
    {
        return parent::getId(); // TODO: Change the autogenerated stub
    }

    /**
     * @param mixed $id
     * @return Mage_Core_Model_Abstract
     */
    public function setId($id)
    {
        return parent::setId($id); // TODO: Change the autogenerated stub
    }

    /**
     * Get notification id
     *
     * @return int
     */
    public function getNotificationId()
    {
        return $this->_getData(self::NOTIFICATION_ID);
    }

    /**
     * Set notification id
     *
     * @param int $notificationId
     * @return $this
     */
    public function setNotificationId($notificationId)
    {
        return $this->setData(self::NOTIFICATION_ID, $notificationId);
    }

    /**
     * Get product id
     *
     * @return int
     */
    public function getProductId()
    {
        return $this->_getData(self::PRODUCT_ID);
    }

    /**
     * Set product id
     *
     * @param int $productId
     * @return $this
     */
    public function setProductId($productId)
    {
        return $this->setData(self::PRODUCT_ID, $productId);
    }

    /**
     * Get product sku
     *
     * @return string
     */
    public function getProductSku()
    {
        return $this->_getData(self::PRODUCT_SKU);
    }

    /**
     * Set product sku
     *
     * @param string $productSku
     * @return $this
     */
    public function setProductSku($productSku)
    {
        return $this->setData(self::PRODUCT_SKU, $productSku);
    }

    /**
     * Get product name
     *
     * @return string
     */
    public function getProductName()
    {
        return $this->_getData(self::PRODUCT_NAME);
    }

    /**
     * Set product name
     *
     * @param string $productName
     * @return $this
     */
    public function setProductName($productName)
    {
        return $this->setData(self::PRODUCT_NAME, $productName);
    }

    /**
     * Get current qty
     *
     * @return float
     */
    public function getCurrentQty()
    {
        return $this->_getData(self::CURRENT_QTY);
    }

    /**
     * Set current qty
     *
     * @param float $currentQty
     * @return $this
     */
    public function setCurrentQty($currentQty)
    {
        return $this->setData(self::CURRENT_QTY, $currentQty);
    }

    /**
     * Get sold per day
     *
     * @return float
     */
    public function getSoldPerDay()
    {
        return $this->_getData(self::SOLD_PER_DAY);
    }

    /**
     * Set sold per day
     *
     * @param float $soldPerDay
     * @return $this
     */
    public function setSoldPerDay($soldPerDay)
    {
        return $this->setData(self::SOLD_PER_DAY, $soldPerDay);
    }

    /**
     * Get total sold
     *
     * @return float
     */
    public function getTotalSold()
    {
        return $this->_getData(self::TOTAL_SOLD);
    }

    /**
     * Set total sold
     *
     * @param float $totalSold
     * @return $this
     */
    public function setTotalSold($totalSold)
    {
        return $this->setData(self::TOTAL_SOLD, $totalSold);
    }

    /**
     * Get availability days
     *
     * @return float
     */
    public function getAvailabilityDays()
    {
        return $this->_getData(self::AVAILABILITY_DAYS);
    }

    /**
     * Set availability days
     *
     * @param float $availabilityDays
     * @return $this
     */
    public function setAvailabilityDays($availabilityDays)
    {
        return $this->setData(self::AVAILABILITY_DAYS, $availabilityDays);
    }

    /**
     * Get availability date
     *
     * @return string
     */
    public function getAvailabilityDate()
    {
        return $this->_getData(self::AVAILABILITY_DATE);
    }

    /**
     * Set availability date
     *
     * @param string $availabilityDate
     * @return $this
     */
    public function setAvailabilityDate($availabilityDate)
    {
        return $this->setData(self::AVAILABILITY_DATE, $availabilityDate);
    }
}